schema {
  query: Query
}

interface IPagedResult {
  pageSize: Int!
  paginationToken: String
}

type Object {
  id: ID!
  created: DateTime!
}

type ObjectsPagedResult implements IPagedResult {
  pageSize: Int!
  paginationToken: String
  items: [Object!]!
}

type Query {
  objects(pageSize: Int paginationToken: String): ObjectsPagedResult! @authorize(apply: BEFORE_RESOLVER)
}

enum ApplyPolicy {
  BEFORE_RESOLVER
  AFTER_RESOLVER
  VALIDATION
}

directive @authorize("The name of the authorization policy that determines access to the annotated resource." policy: String "Roles that are allowed to access the annotated resource." roles: [String!] "Defines when when the authorize directive shall be applied.By default the authorize directives are applied during the validation phase." apply: ApplyPolicy! = VALIDATION) repeatable on OBJECT | FIELD_DEFINITION

directive @export(as: String) on FIELD

"The `@specifiedBy` directive is used within the type system definition language to provide a URL for specifying the behavior of custom scalar definitions."
directive @specifiedBy("The specifiedBy URL points to a human-readable specification. This field will only read a result for scalar types." url: String!) on SCALAR

"The `DateTime` scalar represents an ISO-8601 compliant date time type."
scalar DateTime @specifiedBy(url: "https:\/\/www.graphql-scalars.com\/date-time")
